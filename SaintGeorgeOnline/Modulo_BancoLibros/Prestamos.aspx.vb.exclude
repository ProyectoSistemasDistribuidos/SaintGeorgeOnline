Imports SaintGeorgeOnline_BusinessLogic.ModuloColegio
Imports SaintGeorgeOnline_BusinessLogic.ModuloMatricula
Imports SaintGeorgeOnline_BusinessLogic.ModuloBancoLibros
Imports SaintGeorgeOnline_BusinessEntities.ModuloBancoLibros
Imports SaintGeorgeOnline_Utilities
Imports System.Data
Imports System.Data.SqlClient
Imports System.IO

Partial Class Modulo_BancoLibros_Prestamos
    Inherits System.Web.UI.Page

    Private cod_Modulo As Integer = 1
    Private cod_Opcion As Integer = 1

#Region "Eventos"
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            Me.Master.MostrarTitulo("Prestamos de Libro")


            If Not Page.IsPostBack Then

                cargarCombos()
                limpiarCombos(ddlAulaFiltro, False, True)
                limpiarCombos(ddlAlumnoFiltro, False, True)
            End If
        Catch ex As Exception
            EnvioEmailError(0, ex.ToString)
        End Try
    End Sub

    Protected Sub ddlGradoFiltro_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            If ddlGradoFiltro.SelectedValue <> 0 Then
                cargarComboAula()
            Else
                limpiarCombos(ddlAulaFiltro, False, True)
            End If
        Catch ex As Exception
            EnvioEmailError(0, ex.ToString)
        End Try
    End Sub
    Protected Sub ddlAulaFiltro_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)
        Try
            If ddlGradoFiltro.SelectedValue <> 0 Then
                cargarComboAlumno()
            Else
                limpiarCombos(ddlAlumnoFiltro, False, True)
            End If
        Catch ex As Exception
            EnvioEmailError(0, ex.ToString)
        End Try
    End Sub

    Protected Sub btnAgregar_Click(ByVal sender As Object, ByVal e As System.EventArgs)

    
        'ExisteCodigoBarraRegistradoDetalle()
        Dim usp_mensaje As String = ""
        If validarDetalle(usp_mensaje) Then
            agregarDetalle()
        Else
            MostrarSexyAlertBox(usp_mensaje, "Alert")
        End If

    End Sub

    Protected Sub btnGrabar_Click(ByVal sender As Object, ByVal e As System.EventArgs)
      
        GrabarPrestamo()

    End Sub
#End Region
#Region "Metodos"
    Private Function validarDetalle(ByRef str_Mensaje As String) As Boolean
        Dim result As Boolean = True
        Dim str_alertas As String = ""

        'ObtenerDetalle(tbAgregarLibro.Text)
        Dim obj_BL_PrestamoDetalle As New bl_PrestamoDetalle
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado

        Dim int_cantTotal As Integer = 0
        Dim int_cantDisponible As Integer = 0
        Dim int_cantUtilizado As Integer = 0

        Dim ds_Lista As DataSet = obj_BL_PrestamoDetalle.FUN_GET_ValidacionDatosLibroXCodigoBarra(tbAgregarLibro.Text, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        'ViewState("DatoslibrosXCodBarra") = ds_Lista.Tables(0)
        'If ViewState("DatoslibrosXCodBarra") IsNot Nothing Then
        If ds_Lista.Tables(0).Rows(0).Item("CodigoLibro").ToString > 0 And ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro") > 0 Then
            'MostrarSexyAlertBox("No ha sido registrado la Devolución del Ejemplar.", "Alert")

            lblTituloLibro.Text = ds_Lista.Tables(0).Rows(0).Item("Titulo").ToString
            lblCodigoLibro.Text = ds_Lista.Tables(0).Rows(0).Item("CodigoLibro")
            lblCodigoCopiaLibro.Text = ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro")
        ElseIf ds_Lista.Tables(0).Rows(0).Item("CodigoLibro").ToString = 0 And ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro") = 0 Then
            'MostrarSexyAlertBox("Falta registrar el Código de barra del Ejemplar " & tbAgregarLibro.Text, "Alert")
            str_alertas = "Falta registrar el Código de barra del Ejemplar"
            result = False
        ElseIf ds_Lista.Tables(0).Rows(0).Item("CodigoLibro").ToString = -1 And ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro") = -1 Then
            'MostrarSexyAlertBox("Falta registrar el Código de barra del Ejemplar " & tbAgregarLibro.Text, "Alert")
            str_alertas = "No ha sido registrado la Devolución del Ejemplar."
            result = False
        End If




        If tbAgregarLibro.Text.Trim.Length = 0 Then
            str_alertas = Alertas.ObtenerAlerta(str_alertas, 1, "Agregar libro")
            result = False
        End If

        If ddlAlumnoFiltro.SelectedValue = 0 Then
            str_alertas = Alertas.ObtenerAlerta(str_alertas, 3, "Alumno")
            result = False
        End If

        If ddlAulaFiltro.SelectedValue = 0 Then
            str_alertas = Alertas.ObtenerAlerta(str_alertas, 3, "Aula")
            result = False
        End If

        If ddlAnioAcademicoFiltro.SelectedValue = 0 Then
            str_alertas = Alertas.ObtenerAlerta(str_alertas, 3, "Año Academico")
            result = False
        End If

        Dim dt As DataTable

        If ViewState("listaDatosDetalle") Is Nothing Then
            dt = New DataTable("listaDatosDetalle")
            dt = Datos.agregarColumna(dt, "CodigoDetallePrestamoLibro", "Integer")
            dt = Datos.agregarColumna(dt, "CodigoPrestamoLibro", "Integer")
            dt = Datos.agregarColumna(dt, "Libro", "String")
            'dt = Datos.agregarColumna(dt, "CodigoCopiaLibro", "Integer")
            dt = Datos.agregarColumna(dt, "CodigoAlumno", "Integer")
            dt = Datos.agregarColumna(dt, "NombreAlumno", "String")
            dt = Datos.agregarColumna(dt, "CodigoBarra", "String")
            dt = Datos.agregarColumna(dt, "Tipo", "String")
            dt = Datos.agregarColumna(dt, "Estado", "Integer")
        Else
            dt = ViewState("listaDatosDetalle")
        End If
        Dim int_cantidadRep As Integer = 0

        For Each drv As DataRow In dt.Rows
            If tbAgregarLibro.Text = drv.Item("CodigoBarra") And drv.Item("Estado") = 1 Then
                int_cantidadRep = int_cantidadRep + 1
            End If
        Next

        If int_cantidadRep > 0 Then
            str_alertas = Alertas.ObtenerAlerta(str_alertas, 14, "El Ejemplar")
            result = False
        End If

        str_Mensaje = str_alertas
        Return result
    End Function
    'Private Sub ExisteCodigoBarraRegistradoDetalle()

    'End Sub


    Private Sub GrabarPrestamo()

        Dim obj_BE_Prestamos As New be_Prestamos
        Dim obj_BL_Prestamos As New bl_Prestamos
        Dim obj_BE_PrestamoDetalle As New be_PrestamoDetalle
        Dim obj_BL_PrestamoDetalle As New bl_PrestamoDetalle

        'Dim BoolGrabar As Integer = lblCodigoSolicitud.Text
        Dim usp_mensaje As String = ""
        Dim usp_valor As Integer
        Dim usp_valorDetalle As Integer
        Dim int_valAux As Integer = 0

        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim bool_Grabar As Boolean = False

        Dim dsDetalle As New DataSet
        Dim dtDetalle As DataTable
        If ViewState("listaDatosDetalle") Is Nothing Then ' sino ha ingresado por lo menos 1 detalle
            MostrarSexyAlertBox("Debe ingresar por lo menos un registro.", "Alert")
            Exit Sub
        Else
            dtDetalle = ViewState("listaDatosDetalle")
            int_valAux = dtDetalle.Compute("Count(Estado)", "Estado=1") ' si posee almenos 1 detalle en estado activo
            If Not int_valAux > 0 Then
                MostrarSexyAlertBox("Debe ingresar por lo menos un registro.", "Alert")
                Exit Sub
            End If
        End If

        'usp_valor = obj_BL_Prestamos.FUN_INS_Prestamos( _
        'obj_BE_Prestamos, dtDetalle, usp_mensaje, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        For Each drv As DataRow In dtDetalle.Rows
            If drv.Item("Estado") = 1 Then
                obj_BE_Prestamos.CodigoAlumno = drv.Item("CodigoAlumno")
                obj_BE_Prestamos.CodigoAnio = ddlAnioAcademicoFiltro.SelectedValue

                usp_valor = obj_BL_Prestamos.FUN_INS_Prestamos( _
                obj_BE_Prestamos, usp_mensaje, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)

                If usp_valor > 0 Then
                    obj_BE_PrestamoDetalle.CodigoPrestamo = usp_valor
                    obj_BE_PrestamoDetalle.CodigoBarra = drv.Item("CodigoBarra")

                    usp_valorDetalle = obj_BL_PrestamoDetalle.FUN_INS_DetallePrestamoNuev( _
                    obj_BE_PrestamoDetalle, usp_mensaje, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)

                End If
            End If
        Next

        '       
        ' si posee registros en estado activo
        'obj_BE_SolicitudFotocopias.FechaRegistro = lblFechaSolicitud.Text

        'Dim int_CodigoSolicitud As Integer = lblCodigoSolicitud.Text

        '        If Not int_CodigoSolicitud > 0 Then ' insert
        '            usp_valor = obj_BL_SolicitudFotocopias.FUN_INS_SolicitudFotocopias( _
        'obj_BE_SolicitudFotocopias, dtDetalle, usp_mensaje, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        '        Else ' update
        '            obj_BE_SolicitudFotocopias.CodigoSolicitudFotocopia = int_CodigoSolicitud
        '            usp_valor = obj_BL_SolicitudFotocopias.FUN_UPD_SolicitudFotocopias( _
        'obj_BE_SolicitudFotocopias, dtDetalle, usp_mensaje, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        '        End If

        If usp_valorDetalle > 0 Then
            MostrarSexyAlertBox(usp_mensaje, "Info")
            'btnCancelar_Click()
            'listarSolicitud()
            limpiarCampos()
        Else
            MostrarSexyAlertBox(usp_mensaje, "Alert")
        End If


    End Sub

    Private Sub limpiarCampos()

        Dim dt As DataTable
        dt = New DataTable("listaDatosDetalle")
        dt = Datos.agregarColumna(dt, "CodigoDetallePrestamoLibro", "Integer")
        dt = Datos.agregarColumna(dt, "CodigoPrestamoLibro", "Integer")
        dt = Datos.agregarColumna(dt, "Libro", "String")
        dt = Datos.agregarColumna(dt, "CodigoAlumno", "Integer")
        dt = Datos.agregarColumna(dt, "NombreAlumno", "String")
        dt = Datos.agregarColumna(dt, "CodigoBarra", "String")
        dt = Datos.agregarColumna(dt, "Tipo", "String")
        dt = Datos.agregarColumna(dt, "Estado", "Integer")

        GV_DatosDetalle.DataSource = dt
        GV_DatosDetalle.DataBind()

        ViewState.Remove("listaDatosDetalle")

        lblCodigoCopiaLibro.Text = 0
        lblCodigoLibro.Text = 0
        lblCodigoPrestamo.Text = 0
        lblTituloLibro.Text = ""
    End Sub
    'Private Sub ObtenerDetalle(ByVal str_CodigoBarra As String)

    '    Dim obj_BL_PrestamoDetalle As New bl_PrestamoDetalle
    '    Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
    '    Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado

    '    Dim int_cantTotal As Integer = 0
    '    Dim int_cantDisponible As Integer = 0
    '    Dim int_cantUtilizado As Integer = 0

    '    Dim ds_Lista As DataSet = obj_BL_PrestamoDetalle.FUN_GET_ValidacionDatosLibroXCodigoBarra(str_CodigoBarra, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
    '    'ViewState("DatoslibrosXCodBarra") = ds_Lista.Tables(0)
    '    'If ViewState("DatoslibrosXCodBarra") IsNot Nothing Then
    '    If ds_Lista.Tables(0).Rows(0).Item("CodigoLibro").ToString > 0 And ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro") > 0 Then
    '        MostrarSexyAlertBox("No ha sido registrado la Devolución del Ejemplar.", "Alert")

    '        lblTituloLibro.Text = ds_Lista.Tables(0).Rows(0).Item("Titulo").ToString
    '        lblCodigoLibro.Text = ds_Lista.Tables(0).Rows(0).Item("CodigoLibro")
    '        lblCodigoCopiaLibro.Text = ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro")
    '    ElseIf ds_Lista.Tables(0).Rows(0).Item("CodigoLibro").ToString = 0 And ds_Lista.Tables(0).Rows(0).Item("CodigoCopiaLibro") = 0 Then
    '        MostrarSexyAlertBox("Falta registrar el Código de barra del Ejemplar " & tbAgregarLibro.Text, "Alert")
    '    End If

    '    'GV_DatosDetalle.DataSource = ds_Lista.Tables(1)
    '    'GV_DatosDetalle.DataBind()

    '    'ViewState("listaDatosDetalle") = ds_Lista.Tables(0)


    'End Sub

    Private Sub eliminarDetalle(ByVal int_Codigo As Integer)

        Dim dt As DataTable
        dt = ViewState("listaDatosDetalle")

        For Each auxdr As DataRow In dt.Rows
            If auxdr.Item("CodigoDetallePrestamoLibro").ToString = int_Codigo Then
                auxdr.Item("Estado") = 0
            End If
        Next

        ViewState("listaDatosDetalle") = dt
        pintarDetalle(dt)
        'limpiarCamposDetalle()

    End Sub

    Private Sub agregarDetalle()

        Dim obj_BL_PrestamoDetalle As New bl_PrestamoDetalle

        'Dim BoolGrabar As Integer = lblCodigoSolicitud.Text
        Dim usp_mensaje As String = ""
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim cont_Registrados As Integer = 0
        Dim dt_listaDetalle As New DataTable
        Dim id_codigo_fila As Integer = 0

        Dim dt As DataTable
        Dim int_cont As Integer = 0
        Dim boolIncremento As Boolean = False

        If ViewState("listaDatosDetalle") Is Nothing Then
            dt = New DataTable("listaDatosDetalle")
            dt = Datos.agregarColumna(dt, "CodigoDetallePrestamoLibro", "Integer")
            dt = Datos.agregarColumna(dt, "CodigoPrestamoLibro", "Integer")
            dt = Datos.agregarColumna(dt, "Libro", "String")
            'dt = Datos.agregarColumna(dt, "CodigoCopiaLibro", "Integer")
            dt = Datos.agregarColumna(dt, "CodigoAlumno", "Integer")
            dt = Datos.agregarColumna(dt, "NombreAlumno", "String")
            dt = Datos.agregarColumna(dt, "CodigoBarra", "String")
            dt = Datos.agregarColumna(dt, "Tipo", "String")
            dt = Datos.agregarColumna(dt, "Estado", "Integer")
        Else
            dt = ViewState("listaDatosDetalle")
        End If


        Dim int_totalAux As Integer = dt.Compute("Count(Estado)", "Estado=1")
        Dim int_valAux As Integer = 0
        If int_totalAux > 0 Then
            int_valAux = (From p In dt.AsEnumerable _
                          Select p.Field(Of Integer)("CodigoDetallePrestamoLibro")).Max()
        End If
        int_valAux += 1

        Dim int_codLibro As Integer = 0
        Dim int_codCopiaLibro As Integer = 0


        Dim dr As DataRow
        dr = dt.NewRow
        dr.Item("CodigoDetallePrestamoLibro") = int_valAux
        dr.Item("CodigoPrestamoLibro") = CInt(lblCodigoPrestamo.Text)
        dr.Item("Libro") = lblTituloLibro.Text
        'dr.Item("CodigoCopiaLibro") = int_codCopiaLibro
        dr.Item("CodigoAlumno") = ddlAlumnoFiltro.SelectedValue
        dr.Item("NombreAlumno") = ddlAlumnoFiltro.SelectedItem.ToString
        dr.Item("CodigoBarra") = tbAgregarLibro.Text
        dr.Item("Tipo") = "T"
        dr.Item("Estado") = 1

        dt.Rows.Add(dr)

        ViewState("listaDatosDetalle") = dt
        pintarDetalle(dt)
        GV_DatosDetalle.DataBind()

        'limpiarCamposDetalle()
    End Sub

    Private Sub pintarDetalle(ByVal dt As DataTable)
        Dim dv_lista As DataView = dt.DefaultView
        With dv_lista
            .RowFilter = "1=1 and Estado=1"
        End With
        GV_DatosDetalle.DataSource = dv_lista
        GV_DatosDetalle.DataBind()
    End Sub

    ''' <summary>
    ''' Limpia los combos.
    ''' </summary>
    ''' <remarks>
    ''' Creador:               EdgarChang
    ''' Fecha de Creación:     12/01/2012 
    ''' Modificado por:        _____________
    ''' Fecha de modificación: _____________ 
    ''' </remarks>
    Private Sub limpiarCombos(ByVal combo As DropDownList, ByVal bool_Todos As Boolean, ByVal bool_Seleccione As Boolean)
        Controles.limpiarCombo(combo, bool_Todos, bool_Seleccione)
    End Sub

    Private Sub cargarCombos()
        cargarComboAniosAcademico()
        cargarComboGrado()
        'cargarComboAula()
        'cargarComboAlumno()
    End Sub

    Private Sub cargarComboAniosAcademico()
        Dim obj_BL_Grados As New bl_AniosAcademicos
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim ds_Lista As DataSet = obj_BL_Grados.FUN_LIS_AniosAcademicos("", 1, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        Controles.llenarCombo(ddlAnioAcademicoFiltro, ds_Lista, "Codigo", "Descripcion", False, True)

        ddlAnioAcademicoFiltro.SelectedValue = Me.Master.Obtener_CodigoPeriodoEscolar
    End Sub

    Private Sub cargarComboGrado()
        Dim obj_BL_Grados As New bl_Grados
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim ds_Lista As DataSet = obj_BL_Grados.FUN_LIS_Grados("", 1, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        Controles.llenarCombo(ddlGradoFiltro, ds_Lista, "Codigo", "Descripcion", False, True)

    End Sub

    Private Sub cargarComboAula()
        Dim obj_BL_Aulas As New bl_Aulas
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado
        Dim ds_Lista As DataSet = obj_BL_Aulas.FUN_LIS_Aulas(ddlGradoFiltro.SelectedValue, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)
        Controles.llenarCombo(ddlAulaFiltro, ds_Lista, "Codigo", "Descripcion", False, True)
    End Sub

    Private Sub cargarComboAlumno()
        Dim obj_BL_Alumnos As New bl_Alumnos
        Dim int_CodigoTipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim int_CodigoUsuario As Integer = Me.Master.Obtener_CodigoUsuarioLogueado

        Dim ds_Lista As DataSet = obj_BL_Alumnos.FUN_LIS_AlumnosMidTermReport(ddlAulaFiltro.SelectedValue, Me.Master.Obtener_CodigoPeriodoEscolar, int_CodigoUsuario, int_CodigoTipoUsuario, cod_Modulo, cod_Opcion)

        Controles.llenarCombo(ddlAlumnoFiltro, ds_Lista, "CodigoAlumno", "NombreCompleto", False, True)

    End Sub

    ''' <summary>
    ''' Envía Email de Error de cualquier metodo que lo invoque.
    ''' </summary>
    ''' <param name="int_CodigoAccion">Codigo que hace referencia al tipo de Acción</param>
    ''' <param name="str_DetalleError">Descripción del error</param>
    ''' <remarks>
    ''' Creador:               Johnatan Matta
    ''' Fecha de Creación:     06/01/2011
    ''' Modificado por:        _____________
    ''' Fecha de modificación: _____________ 
    ''' </remarks>
    Private Sub EnvioEmailError(ByVal int_CodigoAccion As Integer, ByVal str_DetalleError As String)
        Dim int_TipoUsuario As Integer = Me.Master.Obtener_CodigoTipoUsuarioLogueado
        Dim str_NombreUsuario As String = Me.Master.Obtener_NombreUsuarioLogueado

        Dim str_MensajeUsuario As String = Alertas.EnviarMensajeErrorEmail(3, 53, int_CodigoAccion, str_DetalleError, str_NombreUsuario, int_TipoUsuario)
        MostrarSexyAlertBox(str_MensajeUsuario, "Error")
    End Sub
    ''' <summary>
    ''' Muestra mensajes de alerta sobre las acciones que se realizan en los distintos formularios.    
    ''' </summary>
    ''' <param name="str_mensaje">Descripción del mensaje que se mostrará en el formulario</param>
    ''' <param name="str_tipoMensaje">Definición de Tipo de Icono que se mostrará en el mensaje</param>
    ''' <remarks>
    ''' Creador:               Johnatan Matta
    ''' Fecha de Creación:     06/01/2011
    ''' Modificado por:        _____________
    ''' Fecha de modificación: _____________ 
    ''' </remarks>
    Protected Sub MostrarSexyAlertBox(ByVal str_Mensaje As String, ByVal str_TipoMensaje As String)
        Me.Master.MostrarMensaje(str_Mensaje, str_TipoMensaje)
    End Sub
#End Region

#Region "Eventos del Gridview"

    'Actualizado para letras
    Protected Sub GV_DatosDetalle_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then

            Dim btnEliminar As ImageButton = e.Row.FindControl("btnEliminar")

            btnEliminar.Attributes.Add("OnClick", "return confirm_delete();")

            e.Row.Attributes.Add("onMouseOver", "this.bgColor='#d3eefa'")
            e.Row.Attributes.Add("onMouseOut", "this.bgColor=''")

        End If
    End Sub

    Protected Sub GV_DatosDetalle_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs)
        Try
            If e.CommandName = "Eliminar" Then

                Dim codigo As Integer = CInt(e.CommandArgument.ToString)
                Dim btn As ImageButton = CType(e.CommandSource, ImageButton)
                Dim row As GridViewRow = CType(btn.NamingContainer, GridViewRow)

                If e.CommandName = "Eliminar" Then

                    eliminarDetalle(codigo)
                End If

            End If

        Catch ex As Exception
            'EnvioEmailError(int_CodigoAccion, ex.ToString)
        End Try
    End Sub

#End Region

#Region "Metodos del Gridview"




#End Region


End Class
